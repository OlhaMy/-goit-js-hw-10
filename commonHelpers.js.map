{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startEl = document.querySelector('[data-start]');\nconst myInput = document.querySelector('#datetime-picker');\n\nstartEl.disabled = true;\nlet selectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    if (selectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startEl.disabled = true;\n    } else {\n      startEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(myInput, options);\n\nstartEl.addEventListener('click', () => {\n  if (!selectedDate || selectedDate < new Date()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a valid date in the future',\n    });\n    return;\n  }\n\n  startEl.disabled = true;\n  myInput.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const currentDate = new Date();\n    const ms = selectedDate - currentDate;\n\n    if (ms <= 0) {\n      clearInterval(intervalId);\n      return;\n    }\n    renderTime(ms);\n  }, 1000);\n});\n\nfunction renderTime(ms) {\n  const parsedTime = convertMs(ms);\n  updateTimer(parsedTime);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = days\n    .toString()\n    .padStart(2, '0');\n  document.querySelector('[data-hours]').textContent = hours\n    .toString()\n    .padStart(2, '0');\n  document.querySelector('[data-minutes]').textContent = minutes\n    .toString()\n    .padStart(2, '0');\n  document.querySelector('[data-seconds]').textContent = seconds\n    .toString()\n    .padStart(2, '0');\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["startEl","myInput","selectedDate","options","selectedDates","iziToast","flatpickr","intervalId","ms","renderTime","parsedTime","convertMs","updateTimer","days","hours","minutes","seconds"],"mappings":"2GAKA,MAAMA,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAU,SAAS,cAAc,kBAAkB,EAEzDD,EAAQ,SAAW,GACnB,IAAIE,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAC1BF,EAAe,IAAI,MACrBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDL,EAAQ,SAAW,IAEnBA,EAAQ,SAAW,EAEtB,CACH,EAEAM,EAAUL,EAASE,CAAO,EAE1BH,EAAQ,iBAAiB,QAAS,IAAM,CACtC,GAAI,CAACE,GAAgBA,EAAe,IAAI,KAAQ,CAC9CG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0CACf,CAAK,EACD,MACD,CAEDL,EAAQ,SAAW,GACnBC,EAAQ,SAAW,GAEnB,MAAMM,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAKN,EADS,IAAI,KAGxB,GAAIM,GAAM,EAAG,CACX,cAAcD,CAAU,EACxB,MACD,CACDE,EAAWD,CAAE,CACd,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAWD,EAAI,CACtB,MAAME,EAAaC,EAAUH,CAAE,EAC/BI,EAAYF,CAAU,CACxB,CAEA,SAASC,EAAUH,EAAI,CAMrB,MAAMK,EAAO,KAAK,MAAML,EAAK,KAAG,EAC1BM,EAAQ,KAAK,MAAON,EAAK,MAAO,IAAI,EACpCO,EAAU,KAAK,MAAQP,EAAK,MAAO,KAAQ,GAAM,EACjDQ,EAAU,KAAK,MAASR,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASJ,EAAY,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcH,EACjD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,cAAc,EAAE,YAAcC,EAClD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,EAClB,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACpD,SAAU,EACV,SAAS,EAAG,GAAG,CACpB"}